(function(global, module) {
'use strict';

/* if in Node, export the instance factory, else apply it to the global namespace  */
var fInstance = function(oNSRoot) {
/* create a JUL instance bound to oNSRoot and make it available to the inner code */
var jul = new JUL.Instance({nsRoot: oNSRoot || global});

/* generated by JUL Designer version 2.1 */
/* 'JUL Comment System - Edit dialog' namespace */
var oProject = jul.ns('JUL.Comments.edit');

jul.apply(oProject,
/* begin 'JUL Comment System - Edit dialog' */
{
	keepBindings: false,
	listenersProperty: 'listeners',
	noLogic: false,
	ns: 'JUL.Comments.edit',
	suggestedFramework: 'xul',
	title: 'JUL Comment System - Edit dialog',
	version: '1.1500456416477',
	init: function () {
		this.parser = new jul.ui.Parser(this.parserConfig);
		this.dialog = this.parser.create(this.ui, this.logic);
		if (this.dialog) {
			ample.documentElement.appendChild(this.dialog);
			this.dialog.showModal();
		}
	}
}
/* end 'JUL Comment System - Edit dialog' */
);

oProject.parserConfig =
/* begin 'JUL Comment System - Edit dialog' parser config */
{
	customFactory: 'JUL.UI.createDom',
	defaultClass: 'xul',
	topDown: true,
	useTags: true
}
/* end 'JUL Comment System - Edit dialog' parser config */
;

oProject.ui =
/* begin 'JUL Comment System - Edit dialog' UI */
{
	tag: 'dialog',
	id: 'dialog-edit',
	height: 390,
	hidden: true,
	title: 'Edit',
	width: 800,
	children: [
		{tag: 'textbox', id: 'textbox-edit', flex: 1, multiline: true, width: '100%'}
	]
}
/* end 'JUL Comment System - Edit dialog' UI */
;

oProject.logic =
/* begin 'JUL Comment System - Edit dialog' logic */
{
	'dialog-edit': {
		listeners: {
			dialogaccept: function () {
				JUL.Comments.saveCode();
			}
		}
	}
}
/* end 'JUL Comment System - Edit dialog' logic */
;


};

if (module && module.exports) {
	module.exports = fInstance;
}
else if (global) {
	fInstance(global);
}
return fInstance;

})(typeof global !== 'undefined' ? global : window, typeof module !== 'undefined' ? module : null);
